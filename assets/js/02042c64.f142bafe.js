"use strict";(self.webpackChunkreact_native_gesture_handler_docs=self.webpackChunkreact_native_gesture_handler_docs||[]).push([[5798],{2290:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"gesture-handlers/fling-gh","title":"FlingGestureHandler","description":"The old API will be removed in the future version of Gesture Handler. Please migrate to gestures API instead. Check out our upgrading guide for more information.","source":"@site/docs/gesture-handlers/fling-gh.md","sourceDirName":"gesture-handlers","slug":"/gesture-handlers/fling-gh","permalink":"/react-native-gesture-handler/docs/gesture-handlers/fling-gh","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-gesture-handler/edit/main/docs/docs/gesture-handlers/fling-gh.md","tags":[],"version":"current","sidebarPosition":9,"frontMatter":{"id":"fling-gh","title":"FlingGestureHandler","sidebar_label":"Fling","sidebar_position":9},"sidebar":"tutorialSidebar","previous":{"title":"Rotation","permalink":"/react-native-gesture-handler/docs/gesture-handlers/rotation-gh"},"next":{"title":"Pinch","permalink":"/react-native-gesture-handler/docs/gesture-handlers/pinch-gh"}}');var r=t(4848),s=t(8453);const o={id:"fling-gh",title:"FlingGestureHandler",sidebar_label:"Fling",sidebar_position:9},a=void 0,d={},l=[{value:"Properties",id:"properties",level:2},{value:"<code>direction</code>",id:"direction",level:3},{value:"<code>numberOfPointers</code>",id:"numberofpointers",level:3},{value:"Event data",id:"event-data",level:2},{value:"<code>x</code>",id:"x",level:3},{value:"<code>y</code>",id:"y",level:3},{value:"<code>absoluteX</code>",id:"absolutex",level:3},{value:"<code>absoluteY</code>",id:"absolutey",level:3},{value:"Example",id:"example",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.admonition,{type:"warning",children:(0,r.jsxs)(n.p,{children:["The old API will be removed in the future version of Gesture Handler. Please migrate to ",(0,r.jsx)(n.a,{href:"/docs/gestures/gesture",children:"gestures API"})," instead. Check out our ",(0,r.jsx)(n.a,{href:"/docs/guides/upgrading-to-2",children:"upgrading guide"})," for more information."]})}),"\n",(0,r.jsxs)(n.p,{children:["A discrete gesture handler that activates when the movement is sufficiently long and fast.\nHandler gets ",(0,r.jsx)(n.a,{href:"/docs/under-the-hood/state#active",children:"ACTIVE"})," when movement is sufficiently long and it does not take too much time.\nWhen handler gets activated it will turn into ",(0,r.jsx)(n.a,{href:"/docs/under-the-hood/state#end",children:"END"})," state when finger is released.\nThe handler will fail to recognize if the finger is lifted before being activated.\nThe handler is implemented using ",(0,r.jsx)(n.a,{href:"https://developer.apple.com/documentation/uikit/uiswipegesturerecognizer",children:"UISwipeGestureRecognizer"})," on iOS and from scratch on Android."]}),"\n",(0,r.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,r.jsxs)(n.p,{children:["See ",(0,r.jsx)(n.a,{href:"/docs/gesture-handlers/common-gh#properties",children:"set of properties inherited from base handler class"}),". Below is a list of properties specific to ",(0,r.jsx)(n.code,{children:"FlingGestureHandler"})," component:"]}),"\n",(0,r.jsx)(n.h3,{id:"direction",children:(0,r.jsx)(n.code,{children:"direction"})}),"\n",(0,r.jsx)(n.p,{children:"Expressed allowed direction of movement. It's possible to pass one or many directions in one parameter:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"direction={Directions.RIGHT | Directions.LEFT}\n"})}),"\n",(0,r.jsx)(n.p,{children:"or"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"direction={Directions.DOWN}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"numberofpointers",children:(0,r.jsx)(n.code,{children:"numberOfPointers"})}),"\n",(0,r.jsx)(n.p,{children:"Determine exact number of points required to handle the fling gesture."}),"\n",(0,r.jsx)(n.h2,{id:"event-data",children:"Event data"}),"\n",(0,r.jsxs)(n.p,{children:["See ",(0,r.jsx)(n.a,{href:"/docs/gesture-handlers/common-gh#event-data",children:"set of event attributes from base handler class"}),". Below is a list of gesture event attributes specific to ",(0,r.jsx)(n.code,{children:"FlingGestureHandler"}),":"]}),"\n",(0,r.jsx)(n.h3,{id:"x",children:(0,r.jsx)(n.code,{children:"x"})}),"\n",(0,r.jsx)(n.p,{children:"X coordinate of the current position of the pointer (finger or a leading pointer when there are multiple fingers placed) relative to the view attached to the handler. Expressed in point units."}),"\n",(0,r.jsx)(n.h3,{id:"y",children:(0,r.jsx)(n.code,{children:"y"})}),"\n",(0,r.jsx)(n.p,{children:"Y coordinate of the current position of the pointer (finger or a leading pointer when there are multiple fingers placed) relative to the view attached to the handler. Expressed in point units."}),"\n",(0,r.jsx)(n.h3,{id:"absolutex",children:(0,r.jsx)(n.code,{children:"absoluteX"})}),"\n",(0,r.jsxs)(n.p,{children:["X coordinate of the current position of the pointer (finger or a leading pointer when there are multiple fingers placed) relative to the window. The value is expressed in point units. It is recommended to use it instead of ",(0,r.jsx)(n.a,{href:"#x",children:(0,r.jsx)(n.code,{children:"x"})})," in cases when the original view can be transformed as an effect of the gesture."]}),"\n",(0,r.jsx)(n.h3,{id:"absolutey",children:(0,r.jsx)(n.code,{children:"absoluteY"})}),"\n",(0,r.jsxs)(n.p,{children:["Y coordinate of the current position of the pointer (finger or a leading pointer when there are multiple fingers placed) relative to the window. The value is expressed in point units. It is recommended to use it instead of ",(0,r.jsx)(n.a,{href:"#y",children:(0,r.jsx)(n.code,{children:"y"})})," in cases when the original view can be transformed as an effect of the gesture."]}),"\n",(0,r.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,r.jsxs)(n.p,{children:["See the ",(0,r.jsx)(n.a,{href:"https://github.com/software-mansion/react-native-gesture-handler/blob/main/example/src/release_tests/fling/index.tsx",children:"fling example"})," from Gesture Handler Example App."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:'const LongPressButton = () => (\n  <FlingGestureHandler\n    direction={Directions.RIGHT | Directions.LEFT}\n    onHandlerStateChange={({ nativeEvent }) => {\n      if (nativeEvent.state === State.ACTIVE) {\n        Alert.alert("I\'m flinged!");\n      }\n    }}>\n    <View style={styles.box} />\n  </FlingGestureHandler>\n);\n'})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var i=t(6540);const r={},s=i.createContext(r);function o(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);