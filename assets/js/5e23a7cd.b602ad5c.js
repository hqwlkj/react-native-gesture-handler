"use strict";(self.webpackChunkreact_native_gesture_handler_docs=self.webpackChunkreact_native_gesture_handler_docs||[]).push([[4149],{8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var r=t(6540);const s={},i=r.createContext(s);function o(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(i.Provider,{value:n},e.children)}},8935:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>c,frontMatter:()=>o,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"gesture-handlers/longpress-gh","title":"LongPressGestureHandler","description":"The old API will be removed in the future version of Gesture Handler. Please migrate to gestures API instead. Check out our upgrading guide for more information.","source":"@site/docs/gesture-handlers/longpress-gh.md","sourceDirName":"gesture-handlers","slug":"/gesture-handlers/longpress-gh","permalink":"/react-native-gesture-handler/docs/gesture-handlers/longpress-gh","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-gesture-handler/edit/main/docs/docs/gesture-handlers/longpress-gh.md","tags":[],"version":"current","sidebarPosition":7,"frontMatter":{"id":"longpress-gh","title":"LongPressGestureHandler","sidebar_label":"Long press","sidebar_position":7},"sidebar":"tutorialSidebar","previous":{"title":"Tap","permalink":"/react-native-gesture-handler/docs/gesture-handlers/tap-gh"},"next":{"title":"Rotation","permalink":"/react-native-gesture-handler/docs/gesture-handlers/rotation-gh"}}');var s=t(4848),i=t(8453);const o={id:"longpress-gh",title:"LongPressGestureHandler",sidebar_label:"Long press",sidebar_position:7},a=void 0,d={},l=[{value:"Properties",id:"properties",level:2},{value:"<code>minDurationMs</code>",id:"mindurationms",level:3},{value:"<code>maxDist</code>",id:"maxdist",level:3},{value:"Event data",id:"event-data",level:2},{value:"<code>x</code>",id:"x",level:3},{value:"<code>y</code>",id:"y",level:3},{value:"<code>absoluteX</code>",id:"absolutex",level:3},{value:"<code>absoluteY</code>",id:"absolutey",level:3},{value:"<code>duration</code>",id:"duration",level:3},{value:"Example",id:"example",level:2}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.admonition,{type:"warning",children:(0,s.jsxs)(n.p,{children:["The old API will be removed in the future version of Gesture Handler. Please migrate to ",(0,s.jsx)(n.a,{href:"/docs/gestures/gesture",children:"gestures API"})," instead. Check out our ",(0,s.jsx)(n.a,{href:"/docs/guides/upgrading-to-2",children:"upgrading guide"})," for more information."]})}),"\n",(0,s.jsxs)(n.p,{children:["A discrete gesture handler that activates when the corresponding view is pressed for a sufficiently long time.\nThis handler's state will turn into ",(0,s.jsx)(n.a,{href:"/docs/under-the-hood/state#end",children:"END"})," immediately after the finger is released.\nThe handler will fail to recognize a touch event if the finger is lifted before the ",(0,s.jsx)(n.a,{href:"#mindurationms",children:"minimum required time"})," or if the finger is moved further than the ",(0,s.jsx)(n.a,{href:"#maxdist",children:"allowable distance"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["The handler is implemented using ",(0,s.jsx)(n.a,{href:"https://developer.apple.com/documentation/uikit/uilongpressgesturerecognizer",children:"UILongPressGestureRecognizer"})," on iOS and ",(0,s.jsx)(n.a,{href:"https://github.com/software-mansion/react-native-gesture-handler/blob/main/android/src/main/java/com/swmansion/gesturehandler/core/LongPressGestureHandler.kt",children:"LongPressGestureHandler"})," on Android."]}),"\n",(0,s.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,s.jsxs)(n.p,{children:["See ",(0,s.jsx)(n.a,{href:"/docs/gesture-handlers/common-gh#properties",children:"set of properties inherited from base handler class"}),". Below is a list of properties specific to the ",(0,s.jsx)(n.code,{children:"LongPressGestureHandler"})," component:"]}),"\n",(0,s.jsx)(n.h3,{id:"mindurationms",children:(0,s.jsx)(n.code,{children:"minDurationMs"})}),"\n",(0,s.jsx)(n.p,{children:"Minimum time, expressed in milliseconds, that a finger must remain pressed on the corresponding view. The default value is 500."}),"\n",(0,s.jsx)(n.h3,{id:"maxdist",children:(0,s.jsx)(n.code,{children:"maxDist"})}),"\n",(0,s.jsxs)(n.p,{children:["Maximum distance, expressed in points, that defines how far the finger is allowed to travel during a long press gesture. If the finger travels further than the defined distance and the handler hasn't yet ",(0,s.jsx)(n.a,{href:"/docs/under-the-hood/state#active",children:"activated"}),", it will fail to recognize the gesture. The default value is 10."]}),"\n",(0,s.jsx)(n.h2,{id:"event-data",children:"Event data"}),"\n",(0,s.jsxs)(n.p,{children:["See ",(0,s.jsx)(n.a,{href:"/docs/gesture-handlers/common-gh#event-data",children:"set of event attributes from base handler class"}),". Below is a list of gesture event attributes specific to the ",(0,s.jsx)(n.code,{children:"LongPressGestureHandler"})," component:"]}),"\n",(0,s.jsx)(n.h3,{id:"x",children:(0,s.jsx)(n.code,{children:"x"})}),"\n",(0,s.jsx)(n.p,{children:"X coordinate, expressed in points, of the current position of the pointer (finger or a leading pointer when there are multiple fingers placed) relative to the view attached to the handler."}),"\n",(0,s.jsx)(n.h3,{id:"y",children:(0,s.jsx)(n.code,{children:"y"})}),"\n",(0,s.jsx)(n.p,{children:"Y coordinate, expressed in points, of the current position of the pointer (finger or a leading pointer when there are multiple fingers placed) relative to the view attached to the handler."}),"\n",(0,s.jsx)(n.h3,{id:"absolutex",children:(0,s.jsx)(n.code,{children:"absoluteX"})}),"\n",(0,s.jsxs)(n.p,{children:["X coordinate, expressed in points, of the current position of the pointer (finger or a leading pointer when there are multiple fingers placed) relative to the window. It is recommended to use ",(0,s.jsx)(n.code,{children:"absoluteX"})," instead of ",(0,s.jsx)(n.a,{href:"#x",children:(0,s.jsx)(n.code,{children:"x"})})," in cases when the view attached to the handler can be transformed as an effect of the gesture."]}),"\n",(0,s.jsx)(n.h3,{id:"absolutey",children:(0,s.jsx)(n.code,{children:"absoluteY"})}),"\n",(0,s.jsxs)(n.p,{children:["Y coordinate, expressed in points, of the current position of the pointer (finger or a leading pointer when there are multiple fingers placed) relative to the window. It is recommended to use ",(0,s.jsx)(n.code,{children:"absoluteY"})," instead of ",(0,s.jsx)(n.a,{href:"#y",children:(0,s.jsx)(n.code,{children:"y"})})," in cases when the view attached to the handler can be transformed as an effect of the gesture."]}),"\n",(0,s.jsx)(n.h3,{id:"duration",children:(0,s.jsx)(n.code,{children:"duration"})}),"\n",(0,s.jsx)(n.p,{children:"Duration of the long press (time since the start of the event), expressed in milliseconds."}),"\n",(0,s.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,s.jsxs)(n.p,{children:["See the ",(0,s.jsx)(n.a,{href:"https://github.com/software-mansion/react-native-gesture-handler/blob/main/example/src/basic/multitap/index.tsx",children:"multitap example"})," from GestureHandler Example App."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'const LongPressButton = () => (\n  <LongPressGestureHandler\n    onHandlerStateChange={({ nativeEvent }) => {\n      if (nativeEvent.state === State.ACTIVE) {\n        Alert.alert("I\'m being pressed for so long");\n      }\n    }}\n    minDurationMs={800}>\n    <View style={styles.box} />\n  </LongPressGestureHandler>\n);\n'})})]})}function c(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}}}]);