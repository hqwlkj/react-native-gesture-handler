"use strict";(self.webpackChunkreact_native_gesture_handler_docs=self.webpackChunkreact_native_gesture_handler_docs||[]).push([[5421],{8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>d});var o=n(6540);const r={},i=o.createContext(r);function a(e){const t=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),o.createElement(i.Provider,{value:t},e.children)}},9134:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>d,default:()=>u,frontMatter:()=>a,metadata:()=>o,toc:()=>s});const o=JSON.parse('{"id":"guides/migrating-off-rnghenabledroot","title":"Migrating off RNGHEnabledRootView","description":"Update MainActivity.java","source":"@site/docs/guides/migrating-off-rnghenabledroot.md","sourceDirName":"guides","slug":"/guides/migrating-off-rnghenabledroot","permalink":"/react-native-gesture-handler/docs/guides/migrating-off-rnghenabledroot","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-gesture-handler/edit/main/docs/docs/guides/migrating-off-rnghenabledroot.md","tags":[],"version":"current","frontMatter":{"id":"migrating-off-rnghenabledroot","title":"Migrating off RNGHEnabledRootView"},"sidebar":"tutorialSidebar","previous":{"title":"Custom swipeable components inside ScrollView (web)","permalink":"/react-native-gesture-handler/docs/guides/swipe-and-scroll"},"next":{"title":"Upgrading to the new API introduced in Gesture Handler 2","permalink":"/react-native-gesture-handler/docs/guides/upgrading-to-2"}}');var r=n(4848),i=n(8453);const a={id:"migrating-off-rnghenabledroot",title:"Migrating off RNGHEnabledRootView"},d=void 0,c={},s=[{value:"Update <code>MainActivity.java</code>",id:"update-mainactivityjava",level:2},{value:"Check if your app works correctly",id:"check-if-your-app-works-correctly",level:2},{value:"Update your JS code",id:"update-your-js-code",level:2}];function l(e){const t={admonition:"admonition",code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(t.h2,{id:"update-mainactivityjava",children:["Update ",(0,r.jsx)(t.code,{children:"MainActivity.java"})]}),"\n",(0,r.jsxs)(t.p,{children:["Update your ",(0,r.jsx)(t.code,{children:"MainActivity.java"})," file (or wherever you create an instance of ",(0,r.jsx)(t.code,{children:"ReactActivityDelegate"}),"), so that it no longer overrides the method responsible for creating ",(0,r.jsx)(t.code,{children:"ReactRootView"})," instance, or modify it so that it no longer uses ",(0,r.jsx)(t.code,{children:"RNGestureHandlerEnabledRootView"}),". Do not forget to remove import for ",(0,r.jsx)(t.code,{children:"RNGestureHandlerEnabledRootView"}),":"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-java",children:"package com.swmansion.gesturehandler.react.example;\n\nimport com.facebook.react.ReactActivity;\n- import com.swmansion.gesturehandler.react.RNGestureHandlerEnabledRootView;\npublic class MainActivity extends ReactActivity {\n\n-  @Override\n-  protected ReactActivityDelegate createReactActivityDelegate() {\n-    return new ReactActivityDelegate(this, getMainComponentName()) {\n-      @Override\n-      protected ReactRootView createRootView() {\n-       return new RNGestureHandlerEnabledRootView(MainActivity.this);\n-      }\n-    };\n-  }\n}\n"})}),"\n",(0,r.jsx)(t.h2,{id:"check-if-your-app-works-correctly",children:"Check if your app works correctly"}),"\n",(0,r.jsxs)(t.p,{children:["Some libraries (for example React Navigation) already use ",(0,r.jsx)(t.code,{children:"GestureHandlerRootView"})," as a wrapper to enable gesture interactions. In that case you don't have to add one yourself. If gestures in your app work as expected after removing ",(0,r.jsx)(t.code,{children:"RNGestureHandlerEnabledRootView"})," you can skip the next step."]}),"\n",(0,r.jsx)(t.h2,{id:"update-your-js-code",children:"Update your JS code"}),"\n",(0,r.jsxs)(t.p,{children:["Instead of using ",(0,r.jsx)(t.code,{children:"RNGestureHandlerEnabledRootView"})," wrap your entry point with ",(0,r.jsx)(t.code,{children:"<GestureHandlerRootView>"})," or ",(0,r.jsx)(t.code,{children:"gestureHandlerRootHOC"}),", for example:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-jsx",children:"export default function App() {\n  return <GestureHandlerRootView style={{ flex: 1 }}>{/* content */}</GestureHandlerRootView>;\n}\n"})}),"\n",(0,r.jsx)(t.admonition,{type:"info",children:(0,r.jsxs)(t.p,{children:["Note that ",(0,r.jsx)(t.code,{children:"GestureHandlerRootView"})," acts like a normal ",(0,r.jsx)(t.code,{children:"View"}),". So if you want it to fill the screen, you will need to pass ",(0,r.jsx)(t.code,{children:"{ flex: 1 }"})," like you'll need to do with a normal View. By default, it'll take the size of the content nested inside."]})})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}}}]);