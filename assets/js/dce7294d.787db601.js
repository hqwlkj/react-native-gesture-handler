"use strict";(self.webpackChunkreact_native_gesture_handler_docs=self.webpackChunkreact_native_gesture_handler_docs||[]).push([[5583],{5680:(e,r,t)=>{t.d(r,{xA:()=>l,yg:()=>g});var n=t(6540);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function i(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?i(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function p(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=n.createContext({}),c=function(e){var r=n.useContext(s),t=r;return e&&(t="function"==typeof e?e(r):o(o({},r),e)),t},l=function(e){var r=c(e.components);return n.createElement(s.Provider,{value:r},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},v=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),u=c(t),v=a,g=u["".concat(s,".").concat(v)]||u[v]||d[v]||i;return t?n.createElement(g,o(o({ref:r},l),{},{components:t})):n.createElement(g,o({ref:r},l))}));function g(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=v;var p={};for(var s in r)hasOwnProperty.call(r,s)&&(p[s]=r[s]);p.originalType=e,p[u]="string"==typeof e?e:a,o[1]=p;for(var c=2;c<i;c++)o[c]=t[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}v.displayName="MDXCreateElement"},9568:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>p,toc:()=>c});var n=t(8168),a=(t(6540),t(5680));const i={id:"create-native-wrapper",title:"createNativeWrapper",sidebar_label:"createNativeWrapper()"},o=void 0,p={unversionedId:"api/gesture-handlers/create-native-wrapper",id:"version-1.x/api/gesture-handlers/create-native-wrapper",title:"createNativeWrapper",description:"Creates provided component with NativeViewGestureHandler, allowing it to be part of RNGH's",source:"@site/versioned_docs/version-1.x/api/gesture-handlers/create-native-wrapper.md",sourceDirName:"api/gesture-handlers",slug:"/api/gesture-handlers/create-native-wrapper",permalink:"/react-native-gesture-handler/docs/1.x/api/gesture-handlers/create-native-wrapper",draft:!1,editUrl:"https://github.com/software-mansion/react-native-gesture-handler/edit/main/docs/versioned_docs/version-1.x/api/gesture-handlers/create-native-wrapper.md",tags:[],version:"1.x",frontMatter:{id:"create-native-wrapper",title:"createNativeWrapper",sidebar_label:"createNativeWrapper()"},sidebar:"version-1.x/docs",previous:{title:"NativeView",permalink:"/react-native-gesture-handler/docs/1.x/api/gesture-handlers/nativeview-gh"},next:{title:"Buttons",permalink:"/react-native-gesture-handler/docs/1.x/api/components/buttons"}},s={},c=[{value:"Arguments",id:"arguments",level:2},{value:"Component",id:"component",level:3},{value:"config",id:"config",level:3},{value:"Returns",id:"returns",level:2}],l={toc:c},u="wrapper";function d(e){let{components:r,...t}=e;return(0,a.yg)(u,(0,n.A)({},l,t,{components:r,mdxType:"MDXLayout"}),(0,a.yg)("p",null,"Creates provided component with NativeViewGestureHandler, allowing it to be part of RNGH's\ngesture system."),(0,a.yg)("h2",{id:"arguments"},"Arguments"),(0,a.yg)("h3",{id:"component"},"Component"),(0,a.yg)("p",null,"The component we want to wrap."),(0,a.yg)("h3",{id:"config"},"config"),(0,a.yg)("p",null,"Config is an object with properties that can be used on ",(0,a.yg)("a",{parentName:"p",href:"/react-native-gesture-handler/docs/1.x/api/gesture-handlers/nativeview-gh"},(0,a.yg)("inlineCode",{parentName:"a"},"NativeViewGestureHandler"))),(0,a.yg)("h2",{id:"returns"},"Returns"),(0,a.yg)("p",null,"Wrapped component."))}d.isMDXComponent=!0}}]);