"use strict";(self.webpackChunkreact_native_gesture_handler_docs=self.webpackChunkreact_native_gesture_handler_docs||[]).push([[5583],{6336:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>l,frontMatter:()=>s,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"api/gesture-handlers/create-native-wrapper","title":"createNativeWrapper","description":"Creates provided component with NativeViewGestureHandler, allowing it to be part of RNGH\'s","source":"@site/versioned_docs/version-1.x/api/gesture-handlers/create-native-wrapper.md","sourceDirName":"api/gesture-handlers","slug":"/api/gesture-handlers/create-native-wrapper","permalink":"/react-native-gesture-handler/docs/1.x/api/gesture-handlers/create-native-wrapper","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-gesture-handler/edit/main/docs/versioned_docs/version-1.x/api/gesture-handlers/create-native-wrapper.md","tags":[],"version":"1.x","frontMatter":{"id":"create-native-wrapper","title":"createNativeWrapper","sidebar_label":"createNativeWrapper()"},"sidebar":"docs","previous":{"title":"NativeView","permalink":"/react-native-gesture-handler/docs/1.x/api/gesture-handlers/nativeview-gh"},"next":{"title":"Buttons","permalink":"/react-native-gesture-handler/docs/1.x/api/components/buttons"}}');var a=r(4848),i=r(8453);const s={id:"create-native-wrapper",title:"createNativeWrapper",sidebar_label:"createNativeWrapper()"},o=void 0,c={},d=[{value:"Arguments",id:"arguments",level:2},{value:"Component",id:"component",level:3},{value:"config",id:"config",level:3},{value:"Returns",id:"returns",level:2}];function p(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.p,{children:"Creates provided component with NativeViewGestureHandler, allowing it to be part of RNGH's\ngesture system."}),"\n",(0,a.jsx)(t.h2,{id:"arguments",children:"Arguments"}),"\n",(0,a.jsx)(t.h3,{id:"component",children:"Component"}),"\n",(0,a.jsx)(t.p,{children:"The component we want to wrap."}),"\n",(0,a.jsx)(t.h3,{id:"config",children:"config"}),"\n",(0,a.jsxs)(t.p,{children:["Config is an object with properties that can be used on ",(0,a.jsx)(t.a,{href:"/react-native-gesture-handler/docs/1.x/api/gesture-handlers/nativeview-gh",children:(0,a.jsx)(t.code,{children:"NativeViewGestureHandler"})})]}),"\n",(0,a.jsx)(t.h2,{id:"returns",children:"Returns"}),"\n",(0,a.jsx)(t.p,{children:"Wrapped component."})]})}function l(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}},8453:(e,t,r)=>{r.d(t,{R:()=>s,x:()=>o});var n=r(6540);const a={},i=n.createContext(a);function s(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);