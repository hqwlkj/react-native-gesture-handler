"use strict";(self.webpackChunkreact_native_gesture_handler_docs=self.webpackChunkreact_native_gesture_handler_docs||[]).push([[9687],{8340:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>c,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"gestures/touch-events","title":"Touch events","description":"Touch event attributes:","source":"@site/docs/gestures/touch-events.md","sourceDirName":"gestures","slug":"/gestures/touch-events","permalink":"/react-native-gesture-handler/docs/gestures/touch-events","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-gesture-handler/edit/main/docs/docs/gestures/touch-events.md","tags":[],"version":"current","sidebarPosition":14,"frontMatter":{"id":"touch-events","title":"Touch events","sidebar_label":"Touch events","sidebar_position":14},"sidebar":"tutorialSidebar","previous":{"title":"Composed gestures","permalink":"/react-native-gesture-handler/docs/gestures/composed-gestures"},"next":{"title":"Gesture state manager","permalink":"/react-native-gesture-handler/docs/gestures/state-manager"}}');var o=n(4848),i=n(8453);const r={id:"touch-events",title:"Touch events",sidebar_label:"Touch events",sidebar_position:14},c=void 0,d={},a=[{value:"Touch event attributes:",id:"touch-event-attributes",level:3},{value:"<code>eventType</code>",id:"eventtype",level:3},{value:"<code>changedTouches</code>",id:"changedtouches",level:3},{value:"<code>allTouches</code>",id:"alltouches",level:3},{value:"<code>numberOfTouches</code>",id:"numberoftouches",level:3},{value:"PointerData attributes:",id:"pointerdata-attributes",level:3},{value:"<code>id</code>",id:"id",level:3},{value:"<code>x</code>",id:"x",level:3},{value:"<code>y</code>",id:"y",level:3},{value:"<code>absoluteX</code>",id:"absolutex",level:3},{value:"<code>absoluteY</code>",id:"absolutey",level:3}];function h(e){const t={a:"a",admonition:"admonition",code:"code",h3:"h3",p:"p",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h3,{id:"touch-event-attributes",children:"Touch event attributes:"}),"\n",(0,o.jsx)(t.h3,{id:"eventtype",children:(0,o.jsx)(t.code,{children:"eventType"})}),"\n",(0,o.jsx)(t.p,{children:"Type of the current event - whether the finger was placed on the screen, moved, lifted or cancelled."}),"\n",(0,o.jsx)(t.h3,{id:"changedtouches",children:(0,o.jsx)(t.code,{children:"changedTouches"})}),"\n",(0,o.jsx)(t.p,{children:"An array of objects where every object represents a single touch. Contains information only about the touches that were affected by the event i.e. those that were placed down, moved, lifted or cancelled."}),"\n",(0,o.jsx)(t.h3,{id:"alltouches",children:(0,o.jsx)(t.code,{children:"allTouches"})}),"\n",(0,o.jsx)(t.p,{children:"An array of objects where every object represents a single touch. Contains information about all active touches."}),"\n",(0,o.jsx)(t.h3,{id:"numberoftouches",children:(0,o.jsx)(t.code,{children:"numberOfTouches"})}),"\n",(0,o.jsx)(t.p,{children:"Number representing the count of currently active touches."}),"\n",(0,o.jsx)(t.admonition,{type:"caution",children:(0,o.jsxs)(t.p,{children:["Don't rely on the order of items in the ",(0,o.jsx)(t.code,{children:"touches"})," as it may change during the gesture, instead use the ",(0,o.jsx)(t.code,{children:"id"})," attribute to track individual touches across events."]})}),"\n",(0,o.jsx)(t.h3,{id:"pointerdata-attributes",children:"PointerData attributes:"}),"\n",(0,o.jsx)(t.h3,{id:"id",children:(0,o.jsx)(t.code,{children:"id"})}),"\n",(0,o.jsx)(t.p,{children:"A number representing id of the touch. It may be used to track the touch between events as the id will not change while it is being tracked."}),"\n",(0,o.jsx)(t.h3,{id:"x",children:(0,o.jsx)(t.code,{children:"x"})}),"\n",(0,o.jsxs)(t.p,{children:["X coordinate of the current position of the touch relative to the view attached to the ",(0,o.jsx)(t.a,{href:"/docs/gestures/gesture-detector",children:(0,o.jsx)(t.code,{children:"GestureDetector"})}),". Expressed in point units."]}),"\n",(0,o.jsx)(t.h3,{id:"y",children:(0,o.jsx)(t.code,{children:"y"})}),"\n",(0,o.jsxs)(t.p,{children:["Y coordinate of the current position of the touch relative to the view attached to the ",(0,o.jsx)(t.a,{href:"/docs/gestures/gesture-detector",children:(0,o.jsx)(t.code,{children:"GestureDetector"})}),". Expressed in point units."]}),"\n",(0,o.jsx)(t.h3,{id:"absolutex",children:(0,o.jsx)(t.code,{children:"absoluteX"})}),"\n",(0,o.jsxs)(t.p,{children:["X coordinate of the current position of the touch relative to the window. The value is expressed in point units. It is recommended to use it instead of ",(0,o.jsx)(t.a,{href:"#x",children:(0,o.jsx)(t.code,{children:"x"})})," in cases when the original view can be transformed as an effect of the gesture."]}),"\n",(0,o.jsx)(t.h3,{id:"absolutey",children:(0,o.jsx)(t.code,{children:"absoluteY"})}),"\n",(0,o.jsxs)(t.p,{children:["Y coordinate of the current position of the touch relative to the window. The value is expressed in point units. It is recommended to use it instead of ",(0,o.jsx)(t.a,{href:"#y",children:(0,o.jsx)(t.code,{children:"y"})})," in cases when the original view can be transformed as an effect of the gesture."]})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>c});var s=n(6540);const o={},i=s.createContext(o);function r(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);